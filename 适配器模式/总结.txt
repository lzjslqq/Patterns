主要优点

　　（1）将目标类和适配者类解耦，从而无须修改原有结构（只需新增一个适配器类）

　　（2）增加了类的透明性（适配者类中的业务实现过程）和复用性（同一个适配者类可以在多个不同的系统中复用）

　　（3）灵活性和可扩展性很好（借助配置文件和反射机制，可以方便地切换适配器，符合开闭原则）

应用场景

　　（1）系统需要使用一些现有的类，而这些类的接口（例如方法名）不符合系统的需要，甚至没有这些类的源码。

　　（2）想要创建一个可以复用的类，用于一些彼此之间没有太大关联的类，包括一些可能在将来引进的类一起工作。